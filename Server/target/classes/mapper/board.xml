<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.vue.board.model.mapper.BoardMapper">

    <select id="listArticle" parameterType="map"  resultType="boardDto">
		
		select b.article_no, b.user_id, b.originNo,b.groupOrd, b.groupLayer, 
 			b.subject, b.content, b.hit,b.register_time, m.user_name
        from board b, members m
        where b.user_id=m.user_id        
                ORDER BY  
			CASE 
				WHEN b.originNo=0 THEN b.article_no  END desc,
			CASE  
				WHEN b.originNo>0  THEN (b.groupOrd ) END ASC,
			CASE
				WHEN b.originNo>0 and b.groupLayer>0 THEN (b.groupLayer) END ASC
        <!-- limit #{start}, #{listsize} -->

    </select>
<!--    
        SELECT code,originNo,groupOrd, groupLayer, concat(LPAD('>' ,groupLayer * 4,'-' ) ,title) title, content,writer, reg_datetime 
    FROM board 
    ORDER BY originNo DESC, groupOrd ASC-->

    <update id="updateHit" parameterType="int">
        update board
        set hit = hit + 1
        where article_no = #{article_no}
    </update>
    
    <update id="modifyArticle" parameterType="boardDto">
		update board
		set subject = #{subject} , content=#{content}
		where article_no = #{article_no}
		
	</update>

    <select id="getArticle" parameterType="int" resultType="boardDto">
        select b.article_no, b.user_id, b.subject, b.content, b.hit, b.register_time, m.user_name, b.groupLayer
        from board b, members m
        where b.user_id = m.user_id
        and b.article_no = #{article_no}
    </select>
    
    <insert id="registComment" parameterType="commentDto">
    	insert into comment(user_id, comment, article_no)
    	values(#{user_id}, #{comment}, #{article_no})
    </insert>
    
    <select id="getComments" parameterType="String" resultType="commentDto">
        select *
        from comment
        where article_no = #{articleno}
    </select>
    
    <delete id="deleteComment" parameterType="commentDto">
		delete
		from comment
		where comment_no = #{comment_no}
	</delete>
	
	<update id="updateComment" parameterType="commentDto">
		update comment
		set comment = #{comment}
		where comment_no = #{comment_no}
	</update>    
    
   
<!--   편집중 -->
    <insert id="registArticle" parameterType="boardDto">
		<selectKey keyProperty="groupOrd" resultType="boardDto" order="BEFORE">
			 select IFNULL(MAX(groupOrd), 0)+1  as groupOrd
			from board 
			where originNo=#{originNo} and groupLayer=#{groupLayer}
		</selectKey>
		INSERT INTO board(originNo, groupOrd, groupLayer, subject, content, user_id, register_time, category)
		values(#{originNo}, #{groupOrd}, #{groupLayer}, #{subject}, #{content}, #{user_id}, now(), #{category})
	</insert>
	
	<insert id="insertReply" parameterType="boardDto">
		INSERT INTO board(originNo, groupOrd, groupLayer, subject, content, user_id, register_time, category)
		values(#{originNo}, #{groupOrd}, #{groupLayer}, #{subject}, #{content}, #{user_id}, now(), #{category})
		<selectKey keyProperty="article_no" resultType="boardDto" order="AFTER">
			SELECT last_insert_id() article_no
		</selectKey>
	</insert>
	
	<update id="updateReplyOrder" parameterType="boardDto">
		update board set groupOrd = groupOrd + 1 
		where originNo = #{originNo} and groupOrd > #{groupOrd}
	</update>
<!--   편집중 -->



    
    <delete id="deleteArticle" parameterType="int">
		delete from board where article_no = #{article_no}
		
	</delete>

    <sql id="search">
        <if test="work !=null and word != '' ">
            <if test="key=='subject'">
                and subject like concat('%', #{word}, '%')
            </if>
            <if test="key != 'subject">
                and ${key}=#{word}
            </if>
        </if>
    </sql>
</mapper>