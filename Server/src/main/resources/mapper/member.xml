<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.vue.member.model.dao.MemberMapper">

    <select id="idCheck" parameterType="String" resultType="int">
        select count(*)
        from members
        where user_id = #{user_id}
    </select>

    <insert id="joinMember" parameterType="member">
        insert
        into members (user_name, user_id, user_password, email_id, email_domain, join_date)
        values (#{user_name}, #{user_id}, #{user_password}, #{email_id}, #{email_domain}, now())
    </insert>

    <select id="loginMember" parameterType="member" resultType="String">
        select user_name
        from members
        where user_id = #{user_id} and user_password = #{user_password}
    </select>

    <!-- 1이면 true, 그 외엔 false 리턴 -->
    <select id="passwordCheck" parameterType="String" resultType="int">
        select count(user_id)
        from members
        where user_id=#{user_id} and user_password=#{user_password}
    </select>

    <update id="editMember" parameterType="member">
        update members
        set user_name=#{user_name}, user_password=#{user_password}, email_id=#{email_id}, email_domain=#{email_domain}
        where user_id=#{user_id}
    </update>

    <update id="updatePwd" parameterType="String">
        update members
        set user_password=#{nPwd}
        where user_id=#{id} and user_password=#{pPwd}
    </update>

    <delete id="deleteMember" parameterType="String">
        delete
        from members
        where user_id=#{user_id}
    </delete>
    
 <!--  <insert id="saveToken" parameterType="member" >
  	insert into 
  	token_info (user_id, salt, access_token, refresh_token)
  	values (#{user_id}, #{salt}, #{access_token}, #{refresh_token})
  	on duplicate key 
  	update salt=#{salt},access_token=#{access_token},refresh_token=#{refresh_token}
  </insert>-->

    <select id="getTokenSalt" parameterType="String" resultType="String">
        select salt
        from token_info
        where user_id = #{user_id}
    </select>

    <update id="uploadProfileImage" parameterType="member">
        update members
        set blob_image=#{blob_image}
        where user_id=#{user_id}
    </update>

    <select id="getUserInfo" parameterType="String" resultType="member">
        select user_id, user_name, email_id, email_domain, blob_image
        from members
        where user_id=#{user_id}
    </select>
</mapper>